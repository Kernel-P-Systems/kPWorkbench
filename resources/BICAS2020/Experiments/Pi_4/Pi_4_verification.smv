MODULE NC1_C1 (p_a, _sync )
VAR
_turn : {_CHO0,_READY};
_cho0 : 0 .. 1;
	a : 0 .. 10;
	a_NC2 : 0 .. 10;
	a_NC3 : 0 .. 50;

INVAR case 
	((_turn = _CHO0) & ((a = 3) & (a >= 3))) : _cho0 != 0;
	TRUE : _cho0 = 0;
esac;

ASSIGN
init (_turn) := _READY;
_cho0 := case 
	(_turn = _CHO0) : case 
		((a = 3) & (a >= 3)) : 1;
		TRUE : 0;
	esac;
	TRUE : 0;
esac;
init (a) := p_a;
init (a_NC2) := 0;
init (a_NC3) := 0;

next (_turn) := case 
	((_turn = _READY)) : case 
		(_sync = _BUSY) : _READY;
		(_sync = _EXCH) : _CHO0;
		TRUE : _turn;
	esac;
	(_turn = _CHO0) : _READY;
	TRUE : _turn;
esac;
next (a_NC2) := case 
	(((_turn = _CHO0) & ((_cho0 = 1) & ((a_NC2 + 3 >= 0) & (a_NC2 + 3 <= 10)))) & ((a = 3) & (a >= 3))) : a_NC2 + 3;
	((_sync = _EXCH)) : 0;
	TRUE : a_NC2;
esac;
next (a_NC3) := case 
	(((_turn = _CHO0) & ((_cho0 = 1) & ((a_NC3 + 3 >= 0) & (a_NC3 + 3 <= 50)))) & ((a = 3) & (a >= 3))) : a_NC3 + 3;
	((_sync = _EXCH)) : 0;
	TRUE : a_NC3;
esac;

 ----------------------- C2 ----------------------- 
MODULE NC2_C2 (p_a, _sync )
VAR
_turn : {_CHO0,_READY};
_cho0 : 0 .. 1;
	a : 0 .. 10;
	a_NC1 : 0 .. 10;

INVAR case 
	((_turn = _CHO0) & ((a = 3) & (a >= 3))) : _cho0 != 0;
	TRUE : _cho0 = 0;
esac;

ASSIGN
init (_turn) := _READY;
_cho0 := case 
	(_turn = _CHO0) : case 
		((a = 3) & (a >= 3)) : 1;
		TRUE : 0;
	esac;
	TRUE : 0;
esac;
init (a) := p_a;
init (a_NC1) := 0;

next (_turn) := case 
	((_turn = _READY)) : case 
		(_sync = _BUSY) : _READY;
		(_sync = _EXCH) : _CHO0;
		TRUE : _turn;
	esac;
	(_turn = _CHO0) : _READY;
	TRUE : _turn;
esac;
next (a_NC1) := case 
	(((_turn = _CHO0) & ((_cho0 = 1) & ((a_NC1 + 3 >= 0) & (a_NC1 + 3 <= 10)))) & ((a = 3) & (a >= 3))) : a_NC1 + 3;
	((_sync = _EXCH)) : 0;
	TRUE : a_NC1;
esac;

 ----------------------- C3 ----------------------- 
MODULE NC3_C3 (_sync )
VAR
_turn : {_CHO0,_READY};
_cho0 : 0 .. 3;
	a : 0 .. 50;
	a_NC4 : 0 .. 10;
	a_NC5 : 0 .. 10;
	a_NC6 : 0 .. 10;
	a_NC7 : 0 .. 10;

INVAR case 
	((_turn = _CHO0) & ((((a >= 3) & (a >= 3)) |
		 ((a >= 3) & (a >= 3))) |
		 ((a >= 3) & (a >= 3)))) : _cho0 != 0;
	TRUE : _cho0 = 0;
esac;

ASSIGN
init (_turn) := _READY;
_cho0 := case 
	(_turn = _CHO0) : case 
		((a >= 3) & (a >= 3)) : 1;
		TRUE : 0;
	esac union case 
		((a >= 3) & (a >= 3)) : 2;
		TRUE : 0;
	esac union case 
		((a >= 3) & (a >= 3)) : 3;
		TRUE : 0;
	esac;
	TRUE : 0;
esac;
init (a) := 0;
init (a_NC4) := 0;
init (a_NC5) := 0;
init (a_NC6) := 0;
init (a_NC7) := 0;

next (_turn) := case 
	((_turn = _READY)) : case 
		(_sync = _BUSY) : _READY;
		(_sync = _EXCH) : _CHO0;
		TRUE : _turn;
	esac;
	(_turn = _CHO0) : _READY;
	TRUE : _turn;
esac;
next (a_NC4) := case 
	(((_turn = _CHO0) & ((_cho0 = 1) & ((a_NC4 + 3 >= 0) & (a_NC4 + 3 <= 10)))) & ((a >= 3) & (a >= 3))) : a_NC4 + 3;
	(((_turn = _CHO0) & ((_cho0 = 2) & ((a_NC4 + 2 >= 0) & (a_NC4 + 2 <= 10)))) & ((a >= 3) & (a >= 3))) : a_NC4 + 2;
	(((_turn = _CHO0) & ((_cho0 = 3) & ((a_NC4 + 1 >= 0) & (a_NC4 + 1 <= 10)))) & ((a >= 3) & (a >= 3))) : a_NC4 + 1;
	((_sync = _EXCH)) : 0;
	TRUE : a_NC4;
esac;
next (a_NC5) := case 
	(((_turn = _CHO0) & ((_cho0 = 1) & ((a_NC5 + 3 >= 0) & (a_NC5 + 3 <= 10)))) & ((a >= 3) & (a >= 3))) : a_NC5 + 3;
	(((_turn = _CHO0) & ((_cho0 = 2) & ((a_NC5 + 2 >= 0) & (a_NC5 + 2 <= 10)))) & ((a >= 3) & (a >= 3))) : a_NC5 + 2;
	(((_turn = _CHO0) & ((_cho0 = 3) & ((a_NC5 + 1 >= 0) & (a_NC5 + 1 <= 10)))) & ((a >= 3) & (a >= 3))) : a_NC5 + 1;
	((_sync = _EXCH)) : 0;
	TRUE : a_NC5;
esac;
next (a_NC6) := case 
	(((_turn = _CHO0) & ((_cho0 = 1) & ((a_NC6 + 3 >= 0) & (a_NC6 + 3 <= 10)))) & ((a >= 3) & (a >= 3))) : a_NC6 + 3;
	(((_turn = _CHO0) & ((_cho0 = 2) & ((a_NC6 + 2 >= 0) & (a_NC6 + 2 <= 10)))) & ((a >= 3) & (a >= 3))) : a_NC6 + 2;
	(((_turn = _CHO0) & ((_cho0 = 3) & ((a_NC6 + 1 >= 0) & (a_NC6 + 1 <= 10)))) & ((a >= 3) & (a >= 3))) : a_NC6 + 1;
	((_sync = _EXCH)) : 0;
	TRUE : a_NC6;
esac;
next (a_NC7) := case 
	(((_turn = _CHO0) & ((_cho0 = 1) & ((a_NC7 + 3 >= 0) & (a_NC7 + 3 <= 10)))) & ((a >= 3) & (a >= 3))) : a_NC7 + 3;
	(((_turn = _CHO0) & ((_cho0 = 2) & ((a_NC7 + 2 >= 0) & (a_NC7 + 2 <= 10)))) & ((a >= 3) & (a >= 3))) : a_NC7 + 2;
	(((_turn = _CHO0) & ((_cho0 = 3) & ((a_NC7 + 1 >= 0) & (a_NC7 + 1 <= 10)))) & ((a >= 3) & (a >= 3))) : a_NC7 + 1;
	((_sync = _EXCH)) : 0;
	TRUE : a_NC7;
esac;

 ----------------------- C4 ----------------------- 
MODULE NC4_C4 (_sync )
VAR
_turn : {_CHO0,_READY};
_cho0 : 0 .. 1;
	a : 0 .. 10;
	a_NC3 : 0 .. 50;

INVAR case 
	((_turn = _CHO0) & ((a >= 3) & (a >= 3))) : _cho0 != 0;
	TRUE : _cho0 = 0;
esac;

ASSIGN
init (_turn) := _READY;
_cho0 := case 
	(_turn = _CHO0) : case 
		((a >= 3) & (a >= 3)) : 1;
		TRUE : 0;
	esac;
	TRUE : 0;
esac;
init (a) := 0;
init (a_NC3) := 0;

next (_turn) := case 
	((_turn = _READY)) : case 
		(_sync = _BUSY) : _READY;
		(_sync = _EXCH) : _CHO0;
		TRUE : _turn;
	esac;
	(_turn = _CHO0) : _READY;
	TRUE : _turn;
esac;
next (a_NC3) := case 
	(((_turn = _CHO0) & ((_cho0 = 1) & ((a_NC3 + 3 >= 0) & (a_NC3 + 3 <= 50)))) & ((a >= 3) & (a >= 3))) : a_NC3 + 3;
	((_sync = _EXCH)) : 0;
	TRUE : a_NC3;
esac;

 ----------------------- C5 ----------------------- 
MODULE NC5_C5 (_sync )
VAR
_turn : {_CHO0,_READY};
_cho0 : 0 .. 3;
	a : 0 .. 10;
	a_NC8 : 0 .. 10;

INVAR case 
	((_turn = _CHO0) & ((((a = 3) & (a >= 3)) |
		 ((a = 2) & (a >= 2))) |
		 ((a = 1) & (a >= 1)))) : _cho0 != 0;
	TRUE : _cho0 = 0;
esac;

ASSIGN
init (_turn) := _READY;
_cho0 := case 
	(_turn = _CHO0) : case 
		((a = 3) & (a >= 3)) : 1;
		TRUE : 0;
	esac union case 
		((a = 2) & (a >= 2)) : 2;
		TRUE : 0;
	esac union case 
		((a = 1) & (a >= 1)) : 3;
		TRUE : 0;
	esac;
	TRUE : 0;
esac;
init (a) := 0;
init (a_NC8) := 0;

next (_turn) := case 
	((_turn = _READY)) : case 
		(_sync = _BUSY) : _READY;
		(_sync = _EXCH) : _CHO0;
		TRUE : _turn;
	esac;
	(_turn = _CHO0) : _READY;
	TRUE : _turn;
esac;
next (a_NC8) := case 
	(((_turn = _CHO0) & ((_cho0 = 1) & ((a_NC8 + 1 >= 0) & (a_NC8 + 1 <= 10)))) & ((a = 3) & (a >= 3))) : a_NC8 + 1;
	((_sync = _EXCH)) : 0;
	TRUE : a_NC8;
esac;

 ----------------------- C6 ----------------------- 
MODULE NC6_C6 (_sync )
VAR
_turn : {_CHO0,_READY};
_cho0 : 0 .. 3;
	a : 0 .. 10;
	a_NC9 : 0 .. 10;

INVAR case 
	((_turn = _CHO0) & ((((a = 3) & (a >= 3)) |
		 ((a = 2) & (a >= 2))) |
		 ((a = 1) & (a >= 1)))) : _cho0 != 0;
	TRUE : _cho0 = 0;
esac;

ASSIGN
init (_turn) := _READY;
_cho0 := case 
	(_turn = _CHO0) : case 
		((a = 3) & (a >= 3)) : 1;
		TRUE : 0;
	esac union case 
		((a = 2) & (a >= 2)) : 2;
		TRUE : 0;
	esac union case 
		((a = 1) & (a >= 1)) : 3;
		TRUE : 0;
	esac;
	TRUE : 0;
esac;
init (a) := 0;
init (a_NC9) := 0;

next (_turn) := case 
	((_turn = _READY)) : case 
		(_sync = _BUSY) : _READY;
		(_sync = _EXCH) : _CHO0;
		TRUE : _turn;
	esac;
	(_turn = _CHO0) : _READY;
	TRUE : _turn;
esac;
next (a_NC9) := case 
	(((_turn = _CHO0) & ((_cho0 = 2) & ((a_NC9 + 1 >= 0) & (a_NC9 + 1 <= 10)))) & ((a = 2) & (a >= 2))) : a_NC9 + 1;
	((_sync = _EXCH)) : 0;
	TRUE : a_NC9;
esac;

 ----------------------- C7 ----------------------- 
MODULE NC7_C7 (_sync )
VAR
_turn : {_CHO0,_READY};
_cho0 : 0 .. 3;
	a : 0 .. 10;
	a_NC10 : 0 .. 10;

INVAR case 
	((_turn = _CHO0) & ((((a = 3) & (a >= 3)) |
		 ((a = 2) & (a >= 2))) |
		 ((a = 1) & (a >= 1)))) : _cho0 != 0;
	TRUE : _cho0 = 0;
esac;

ASSIGN
init (_turn) := _READY;
_cho0 := case 
	(_turn = _CHO0) : case 
		((a = 3) & (a >= 3)) : 1;
		TRUE : 0;
	esac union case 
		((a = 2) & (a >= 2)) : 2;
		TRUE : 0;
	esac union case 
		((a = 1) & (a >= 1)) : 3;
		TRUE : 0;
	esac;
	TRUE : 0;
esac;
init (a) := 0;
init (a_NC10) := 0;

next (_turn) := case 
	((_turn = _READY)) : case 
		(_sync = _BUSY) : _READY;
		(_sync = _EXCH) : _CHO0;
		TRUE : _turn;
	esac;
	(_turn = _CHO0) : _READY;
	TRUE : _turn;
esac;
next (a_NC10) := case 
	(((_turn = _CHO0) & ((_cho0 = 3) & ((a_NC10 + 1 >= 0) & (a_NC10 + 1 <= 10)))) & ((a = 1) & (a >= 1))) : a_NC10 + 1;
	((_sync = _EXCH)) : 0;
	TRUE : a_NC10;
esac;

 ----------------------- C8 ----------------------- 
MODULE NC8_C8 (_sync )
VAR
_turn : {_CHO0,_READY};
_cho0 : 0 .. 1;
	a : 0 .. 10;
	a_NC11 : 0 .. 10;

INVAR case 
	((_turn = _CHO0) & ((a > 4) & (a >= 1))) : _cho0 != 0;
	TRUE : _cho0 = 0;
esac;

ASSIGN
init (_turn) := _READY;
_cho0 := case 
	(_turn = _CHO0) : case 
		((a > 4) & (a >= 1)) : 1;
		TRUE : 0;
	esac;
	TRUE : 0;
esac;
init (a) := 0;
init (a_NC11) := 0;

next (_turn) := case 
	((_turn = _READY)) : case 
		(_sync = _BUSY) : _READY;
		(_sync = _EXCH) : _CHO0;
		TRUE : _turn;
	esac;
	(_turn = _CHO0) : _READY;
	TRUE : _turn;
esac;
next (a_NC11) := case 
	(((_turn = _CHO0) & ((_cho0 = 1) & ((a_NC11 + 1 >= 0) & (a_NC11 + 1 <= 10)))) & ((a > 4) & (a >= 1))) : a_NC11 + 1;
	((_sync = _EXCH)) : 0;
	TRUE : a_NC11;
esac;

 ----------------------- C9 ----------------------- 
MODULE NC9_C9 (_sync )
VAR
_turn : {_CHO0,_READY};
_cho0 : 0 .. 1;
	a : 0 .. 10;
	a_NEnv : 0 .. 10;

INVAR case 
	((_turn = _CHO0) & ((a > 4) & (a >= 1))) : _cho0 != 0;
	TRUE : _cho0 = 0;
esac;

ASSIGN
init (_turn) := _READY;
_cho0 := case 
	(_turn = _CHO0) : case 
		((a > 4) & (a >= 1)) : 1;
		TRUE : 0;
	esac;
	TRUE : 0;
esac;
init (a) := 0;
init (a_NEnv) := 0;

next (_turn) := case 
	((_turn = _READY)) : case 
		(_sync = _BUSY) : _READY;
		(_sync = _EXCH) : _CHO0;
		TRUE : _turn;
	esac;
	(_turn = _CHO0) : _READY;
	TRUE : _turn;
esac;
next (a_NEnv) := case 
	(((_turn = _CHO0) & ((_cho0 = 1) & ((a_NEnv + 1 >= 0) & (a_NEnv + 1 <= 10)))) & ((a > 4) & (a >= 1))) : a_NEnv + 1;
	((_sync = _EXCH)) : 0;
	TRUE : a_NEnv;
esac;

 ----------------------- C10 ----------------------- 
MODULE NC10_C10 (_sync )
VAR
_turn : {_CHO0,_READY};
_cho0 : 0 .. 1;
	a : 0 .. 10;
	a_NC12 : 0 .. 10;

INVAR case 
	((_turn = _CHO0) & ((a > 4) & (a >= 1))) : _cho0 != 0;
	TRUE : _cho0 = 0;
esac;

ASSIGN
init (_turn) := _READY;
_cho0 := case 
	(_turn = _CHO0) : case 
		((a > 4) & (a >= 1)) : 1;
		TRUE : 0;
	esac;
	TRUE : 0;
esac;
init (a) := 0;
init (a_NC12) := 0;

next (_turn) := case 
	((_turn = _READY)) : case 
		(_sync = _BUSY) : _READY;
		(_sync = _EXCH) : _CHO0;
		TRUE : _turn;
	esac;
	(_turn = _CHO0) : _READY;
	TRUE : _turn;
esac;
next (a_NC12) := case 
	(((_turn = _CHO0) & ((_cho0 = 1) & ((a_NC12 + 1 >= 0) & (a_NC12 + 1 <= 10)))) & ((a > 4) & (a >= 1))) : a_NC12 + 1;
	((_sync = _EXCH)) : 0;
	TRUE : a_NC12;
esac;

 ----------------------- C11 ----------------------- 
MODULE NC11_C11 (_sync )
VAR
_turn : {_CHO0,_READY};
_cho0 : 0 .. 1;
	a : 0 .. 10;
	a_NEnv : 0 .. 10;

INVAR case 
	((_turn = _CHO0) & ((a > 4) & (a >= 1))) : _cho0 != 0;
	TRUE : _cho0 = 0;
esac;

ASSIGN
init (_turn) := _READY;
_cho0 := case 
	(_turn = _CHO0) : case 
		((a > 4) & (a >= 1)) : 1;
		TRUE : 0;
	esac;
	TRUE : 0;
esac;
init (a) := 0;
init (a_NEnv) := 0;

next (_turn) := case 
	((_turn = _READY)) : case 
		(_sync = _BUSY) : _READY;
		(_sync = _EXCH) : _CHO0;
		TRUE : _turn;
	esac;
	(_turn = _CHO0) : _READY;
	TRUE : _turn;
esac;
next (a_NEnv) := case 
	(((_turn = _CHO0) & ((_cho0 = 1) & ((a_NEnv + 1 >= 0) & (a_NEnv + 1 <= 10)))) & ((a > 4) & (a >= 1))) : a_NEnv + 1;
	((_sync = _EXCH)) : 0;
	TRUE : a_NEnv;
esac;

 ----------------------- C12 ----------------------- 
MODULE NC12_C12 (_sync )
VAR
_turn : {_CHO0,_READY};
_cho0 : 0 .. 1;
	a : 0 .. 10;
	a_NEnv : 0 .. 10;

INVAR case 
	((_turn = _CHO0) & ((a > 4) & (a >= 1))) : _cho0 != 0;
	TRUE : _cho0 = 0;
esac;

ASSIGN
init (_turn) := _READY;
_cho0 := case 
	(_turn = _CHO0) : case 
		((a > 4) & (a >= 1)) : 1;
		TRUE : 0;
	esac;
	TRUE : 0;
esac;
init (a) := 0;
init (a_NEnv) := 0;

next (_turn) := case 
	((_turn = _READY)) : case 
		(_sync = _BUSY) : _READY;
		(_sync = _EXCH) : _CHO0;
		TRUE : _turn;
	esac;
	(_turn = _CHO0) : _READY;
	TRUE : _turn;
esac;
next (a_NEnv) := case 
	(((_turn = _CHO0) & ((_cho0 = 1) & ((a_NEnv + 1 >= 0) & (a_NEnv + 1 <= 10)))) & ((a > 4) & (a >= 1))) : a_NEnv + 1;
	((_sync = _EXCH)) : 0;
	TRUE : a_NEnv;
esac;

 ----------------------- ENV ----------------------- 
MODULE NEnv_Env (_sync )
VAR
_turn : {_SEQ0,_READY};
_count : 0 .. 3;
_seq0 : 0 .. 1;
	a : 0 .. 10;


ASSIGN
init (_turn) := _READY;
init (_count) := 0;
_seq0 := case 
	(_turn = _SEQ0) : case 
		TRUE : 0;
	esac;
	TRUE : 0;
esac;
init (a) := 0;

next (_turn) := case 
	((_turn = _READY)) : case 
		(_sync = _BUSY) : _READY;
		(_sync = _EXCH) : _SEQ0;
		TRUE : _turn;
	esac;
	(_turn = _SEQ0) : case 
		(_seq0 != 0) : _SEQ0;
		TRUE : _READY;
	esac;
	TRUE : _turn;
esac;
next (_count) := case 
	((_turn = _SEQ0) & (_count < 0)) : case 
		(_seq0 != 0) : _count + 1;
		TRUE : 0;
	esac;
	((next(_turn) = _SEQ0)) : 1;
	TRUE : 0;
esac;

 ----------------------- MAIN ----------------------- 
MODULE main
VAR
_sync : {_BUSY,_EXCH};
pInS : boolean;
	NC1 : NC1_C1(3,_sync);
	NC2 : NC2_C2(3,_sync);
	NC3 : NC3_C3(_sync);
	NC4 : NC4_C4(_sync);
	NC5 : NC5_C5(_sync);
	NC6 : NC6_C6(_sync);
	NC7 : NC7_C7(_sync);
	NC8 : NC8_C8(_sync);
	NC9 : NC9_C9(_sync);
	NC10 : NC10_C10(_sync);
	NC11 : NC11_C11(_sync);
	NC12 : NC12_C12(_sync);
	NEnv : NEnv_Env(_sync);
ASSIGN
init (_sync) := _EXCH;
init (pInS) := TRUE;
next (_sync) := case 
	((((((((((((((next(NC1._turn) = _READY)) 
	& (next(NC2._turn) = _READY)) 
	& (next(NC3._turn) = _READY)) 
	& (next(NC4._turn) = _READY)) 
	& (next(NC5._turn) = _READY)) 
	& (next(NC6._turn) = _READY)) 
	& (next(NC7._turn) = _READY)) 
	& (next(NC8._turn) = _READY)) 
	& (next(NC9._turn) = _READY)) 
	& (next(NC10._turn) = _READY)) 
	& (next(NC11._turn) = _READY)) 
	& (next(NC12._turn) = _READY)) 
	& (next(NEnv._turn) = _READY)) : _EXCH;
	TRUE : _BUSY;
esac;
next (pInS) := case 
	(_sync = _EXCH) : TRUE;
	TRUE : FALSE;
esac;

next (NC1.a) := case
(((_sync = _EXCH)) & ((NC1.a + NC2.a_NC1 >= 0) & (NC1.a + NC2.a_NC1 <= 10))) : NC1.a + NC2.a_NC1;
(((NC1._turn = _CHO0) & (NC1._cho0 = 1)) & (((NC1.a - 3 >= 0) & (NC1.a - 3 <= 10)) & ((NC1.a = 3) & (NC1.a >= 3)))) : NC1.a - 3;
TRUE : NC1.a;
esac;
next (NC2.a) := case
(((_sync = _EXCH)) & ((NC2.a + NC1.a_NC2 >= 0) & (NC2.a + NC1.a_NC2 <= 10))) : NC2.a + NC1.a_NC2;
(((NC2._turn = _CHO0) & (NC2._cho0 = 1)) & (((NC2.a - 3 >= 0) & (NC2.a - 3 <= 10)) & ((NC2.a = 3) & (NC2.a >= 3)))) : NC2.a - 3;
TRUE : NC2.a;
esac;
next (NC3.a) := case
(((_sync = _EXCH)) & ((NC3.a + NC1.a_NC3 + NC4.a_NC3 >= 0) & (NC3.a + NC1.a_NC3 + NC4.a_NC3 <= 50))) : NC3.a + NC1.a_NC3 + NC4.a_NC3;
(((NC3._turn = _CHO0) & (NC3._cho0 = 1)) & (((NC3.a - 3 >= 0) & (NC3.a - 3 <= 50)) & ((NC3.a >= 3) & (NC3.a >= 3)))) : NC3.a - 3;
(((NC3._turn = _CHO0) & (NC3._cho0 = 2)) & (((NC3.a - 3 >= 0) & (NC3.a - 3 <= 50)) & ((NC3.a >= 3) & (NC3.a >= 3)))) : NC3.a - 3;
(((NC3._turn = _CHO0) & (NC3._cho0 = 3)) & (((NC3.a - 3 >= 0) & (NC3.a - 3 <= 50)) & ((NC3.a >= 3) & (NC3.a >= 3)))) : NC3.a - 3;
TRUE : NC3.a;
esac;
next (NC4.a) := case
(((_sync = _EXCH)) & ((NC4.a + NC3.a_NC4 >= 0) & (NC4.a + NC3.a_NC4 <= 10))) : NC4.a + NC3.a_NC4;
(((NC4._turn = _CHO0) & (NC4._cho0 = 1)) & (((NC4.a - 3 >= 0) & (NC4.a - 3 <= 10)) & ((NC4.a >= 3) & (NC4.a >= 3)))) : NC4.a - 3;
TRUE : NC4.a;
esac;
next (NC5.a) := case
(((_sync = _EXCH)) & ((NC5.a + NC3.a_NC5 >= 0) & (NC5.a + NC3.a_NC5 <= 10))) : NC5.a + NC3.a_NC5;
(((NC5._turn = _CHO0) & (NC5._cho0 = 1)) & (((NC5.a - 3 >= 0) & (NC5.a - 3 <= 10)) & ((NC5.a = 3) & (NC5.a >= 3)))) : NC5.a - 3;
(((NC5._turn = _CHO0) & (NC5._cho0 = 2)) & (((NC5.a - 2 >= 0) & (NC5.a - 2 <= 10)) & ((NC5.a = 2) & (NC5.a >= 2)))) : NC5.a - 2;
(((NC5._turn = _CHO0) & (NC5._cho0 = 3)) & (((NC5.a - 1 >= 0) & (NC5.a - 1 <= 10)) & ((NC5.a = 1) & (NC5.a >= 1)))) : NC5.a - 1;
TRUE : NC5.a;
esac;
next (NC6.a) := case
(((_sync = _EXCH)) & ((NC6.a + NC3.a_NC6 >= 0) & (NC6.a + NC3.a_NC6 <= 10))) : NC6.a + NC3.a_NC6;
(((NC6._turn = _CHO0) & (NC6._cho0 = 1)) & (((NC6.a - 3 >= 0) & (NC6.a - 3 <= 10)) & ((NC6.a = 3) & (NC6.a >= 3)))) : NC6.a - 3;
(((NC6._turn = _CHO0) & (NC6._cho0 = 2)) & (((NC6.a - 2 >= 0) & (NC6.a - 2 <= 10)) & ((NC6.a = 2) & (NC6.a >= 2)))) : NC6.a - 2;
(((NC6._turn = _CHO0) & (NC6._cho0 = 3)) & (((NC6.a - 1 >= 0) & (NC6.a - 1 <= 10)) & ((NC6.a = 1) & (NC6.a >= 1)))) : NC6.a - 1;
TRUE : NC6.a;
esac;
next (NC7.a) := case
(((_sync = _EXCH)) & ((NC7.a + NC3.a_NC7 >= 0) & (NC7.a + NC3.a_NC7 <= 10))) : NC7.a + NC3.a_NC7;
(((NC7._turn = _CHO0) & (NC7._cho0 = 1)) & (((NC7.a - 3 >= 0) & (NC7.a - 3 <= 10)) & ((NC7.a = 3) & (NC7.a >= 3)))) : NC7.a - 3;
(((NC7._turn = _CHO0) & (NC7._cho0 = 2)) & (((NC7.a - 2 >= 0) & (NC7.a - 2 <= 10)) & ((NC7.a = 2) & (NC7.a >= 2)))) : NC7.a - 2;
(((NC7._turn = _CHO0) & (NC7._cho0 = 3)) & (((NC7.a - 1 >= 0) & (NC7.a - 1 <= 10)) & ((NC7.a = 1) & (NC7.a >= 1)))) : NC7.a - 1;
TRUE : NC7.a;
esac;
next (NC8.a) := case
(((_sync = _EXCH)) & ((NC8.a + NC5.a_NC8 >= 0) & (NC8.a + NC5.a_NC8 <= 10))) : NC8.a + NC5.a_NC8;
(((NC8._turn = _CHO0) & (NC8._cho0 = 1)) & (((NC8.a - 1 >= 0) & (NC8.a - 1 <= 10)) & ((NC8.a > 4) & (NC8.a >= 1)))) : NC8.a - 1;
TRUE : NC8.a;
esac;
next (NC9.a) := case
(((_sync = _EXCH)) & ((NC9.a + NC6.a_NC9 >= 0) & (NC9.a + NC6.a_NC9 <= 10))) : NC9.a + NC6.a_NC9;
(((NC9._turn = _CHO0) & (NC9._cho0 = 1)) & (((NC9.a - 1 >= 0) & (NC9.a - 1 <= 10)) & ((NC9.a > 4) & (NC9.a >= 1)))) : NC9.a - 1;
TRUE : NC9.a;
esac;
next (NC10.a) := case
(((_sync = _EXCH)) & ((NC10.a + NC7.a_NC10 >= 0) & (NC10.a + NC7.a_NC10 <= 10))) : NC10.a + NC7.a_NC10;
(((NC10._turn = _CHO0) & (NC10._cho0 = 1)) & (((NC10.a - 1 >= 0) & (NC10.a - 1 <= 10)) & ((NC10.a > 4) & (NC10.a >= 1)))) : NC10.a - 1;
TRUE : NC10.a;
esac;
next (NC11.a) := case
(((_sync = _EXCH)) & ((NC11.a + NC8.a_NC11 >= 0) & (NC11.a + NC8.a_NC11 <= 10))) : NC11.a + NC8.a_NC11;
(((NC11._turn = _CHO0) & (NC11._cho0 = 1)) & (((NC11.a - 1 >= 0) & (NC11.a - 1 <= 10)) & ((NC11.a > 4) & (NC11.a >= 1)))) : NC11.a - 1;
TRUE : NC11.a;
esac;
next (NC12.a) := case
(((_sync = _EXCH)) & ((NC12.a + NC10.a_NC12 >= 0) & (NC12.a + NC10.a_NC12 <= 10))) : NC12.a + NC10.a_NC12;
(((NC12._turn = _CHO0) & (NC12._cho0 = 1)) & (((NC12.a - 1 >= 0) & (NC12.a - 1 <= 10)) & ((NC12.a > 4) & (NC12.a >= 1)))) : NC12.a - 1;
TRUE : NC12.a;
esac;
next (NEnv.a) := case
(((_sync = _EXCH)) & ((NEnv.a + NC11.a_NEnv + NC9.a_NEnv + NC12.a_NEnv >= 0) & (NEnv.a + NC11.a_NEnv + NC9.a_NEnv + NC12.a_NEnv <= 10))) : NEnv.a + NC11.a_NEnv + NC9.a_NEnv + NC12.a_NEnv;
TRUE : NEnv.a;
esac;

-- LTL Properties
LTLSPEC F ((NC9.a > 0 & NC11.a > 0 & NC12.a > 0 & NEnv.a > 0) | !pInS)
LTLSPEC F (G (NEnv.a > 0 | !pInS ) & pInS) 
LTLSPEC G (( NC8.a <= 5 & NC10.a <= 5 & NC9.a <= 5 & NC11.a <= 5 & NC12.a <= 5) | !pInS)
LTLSPEC !( F ((NC1.a < 3 | NC1.a > 3) & pInS))


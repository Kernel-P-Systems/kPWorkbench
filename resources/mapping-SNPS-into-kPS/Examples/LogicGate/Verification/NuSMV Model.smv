MODULE input_Input (p_x, p_y, _sync )
VAR
_turn : {_MAX0,_READY};
_count : 0 .. 6;
_max0 : 0 .. 6;
_max0_guard1 : boolean;
_max0_guard2 : boolean;
_max0_guard3 : boolean;
_max0_guard4 : boolean;
_max0_guard5 : boolean;
_max0_guard6 : boolean;
	a_N1 : 0 .. 1;
	a_N2 : 0 .. 1;
	a_N3 : 0 .. 1;
	x : 0 .. 1;
	y : 0 .. 1;
	z : 0 .. 1;

INVAR case 
	(_turn = _MAX0) : case 
		(_count = 0) : case 
			((((((x >= 1) |
		 (x >= 1)) |
		 (y >= 1)) |
		 (y >= 1)) |
		 (z >= 1)) |
		 (z >= 1)) : _max0 != 0;
			TRUE : _max0 = 0;
		esac;
		(_count = 1) : case 
			((((((_max0_guard1 & (x >= 1)) |
		 (_max0_guard2 & (x >= 1))) |
		 (_max0_guard3 & (y >= 1))) |
		 (_max0_guard4 & (y >= 1))) |
		 (_max0_guard5 & (z >= 1))) |
		 (_max0_guard6 & (z >= 1))) : _max0 != 0;
			TRUE : _max0 = 0;
		esac;
		TRUE : _max0 = 0;
	esac;
	TRUE : _max0 = 0;
esac;

ASSIGN
init (_turn) := _READY;
init (_count) := 0;
_max0 := case 
	(_turn = _MAX0) : case 
		(_count = 0) : case 
			(x >= 1) : 1;
			TRUE : 0;
		esac union case 
			(x >= 1) : 2;
			TRUE : 0;
		esac union case 
			(y >= 1) : 3;
			TRUE : 0;
		esac union case 
			(y >= 1) : 4;
			TRUE : 0;
		esac union case 
			(z >= 1) : 5;
			TRUE : 0;
		esac union case 
			(z >= 1) : 6;
			TRUE : 0;
		esac;
		(_count = 1) : case 
			(_max0_guard1 & (x >= 1)) : 1;
			TRUE : 0;
		esac union case 
			(_max0_guard2 & (x >= 1)) : 2;
			TRUE : 0;
		esac union case 
			(_max0_guard3 & (y >= 1)) : 3;
			TRUE : 0;
		esac union case 
			(_max0_guard4 & (y >= 1)) : 4;
			TRUE : 0;
		esac union case 
			(_max0_guard5 & (z >= 1)) : 5;
			TRUE : 0;
		esac union case 
			(_max0_guard6 & (z >= 1)) : 6;
			TRUE : 0;
		esac;
		TRUE : 0;
	esac;
	TRUE : 0;
esac;
init (_max0_guard1) := FALSE;
init (_max0_guard2) := FALSE;
init (_max0_guard3) := FALSE;
init (_max0_guard4) := FALSE;
init (_max0_guard5) := FALSE;
init (_max0_guard6) := FALSE;
init (a_N1) := 0;
init (a_N2) := 0;
init (a_N3) := 0;
init (x) := p_x;
init (y) := p_y;
init (z) := 0;

next (_turn) := case 
	((_turn = _READY)) : case 
		(_sync = _BUSY) : _READY;
		(_sync = _EXCH) : _MAX0;
		TRUE : _turn;
	esac;
	(_turn = _MAX0) : case 
		(_max0 != 0) : _MAX0;
		TRUE : _READY;
	esac;
	TRUE : _turn;
esac;
next (_count) := case 
	(_turn = _MAX0) : case 
		(_max0 != 0) : 1;
		TRUE : 0;
	esac;
	TRUE : 0;
esac;
next (_max0_guard1) := case 
	((_turn = _MAX0) & ((_max0 != 0) & (_count = 0))) : TRUE;
	((next(_turn) = _MAX0) & (_max0 != 0)) : _max0_guard1;
	TRUE : FALSE;
esac;
next (_max0_guard2) := case 
	((_turn = _MAX0) & ((_max0 != 0) & (_count = 0))) : TRUE;
	((next(_turn) = _MAX0) & (_max0 != 0)) : _max0_guard2;
	TRUE : FALSE;
esac;
next (_max0_guard3) := case 
	((_turn = _MAX0) & ((_max0 != 0) & (_count = 0))) : TRUE;
	((next(_turn) = _MAX0) & (_max0 != 0)) : _max0_guard3;
	TRUE : FALSE;
esac;
next (_max0_guard4) := case 
	((_turn = _MAX0) & ((_max0 != 0) & (_count = 0))) : TRUE;
	((next(_turn) = _MAX0) & (_max0 != 0)) : _max0_guard4;
	TRUE : FALSE;
esac;
next (_max0_guard5) := case 
	((_turn = _MAX0) & ((_max0 != 0) & (_count = 0))) : TRUE;
	((next(_turn) = _MAX0) & (_max0 != 0)) : _max0_guard5;
	TRUE : FALSE;
esac;
next (_max0_guard6) := case 
	((_turn = _MAX0) & ((_max0 != 0) & (_count = 0))) : TRUE;
	((next(_turn) = _MAX0) & (_max0 != 0)) : _max0_guard6;
	TRUE : FALSE;
esac;
next (a_N1) := case 
	(((_turn = _MAX0) & ((_max0 = 1) & ((a_N1 + 1 >= 0) & (a_N1 + 1 <= 1)))) & (x >= 1)) : a_N1 + 1;
	((_sync = _EXCH)) : 0;
	TRUE : a_N1;
esac;
next (a_N2) := case 
	(((_turn = _MAX0) & ((_max0 = 3) & ((a_N2 + 1 >= 0) & (a_N2 + 1 <= 1)))) & (y >= 1)) : a_N2 + 1;
	((_sync = _EXCH)) : 0;
	TRUE : a_N2;
esac;
next (a_N3) := case 
	(((_turn = _MAX0) & ((_max0 = 5) & ((a_N3 + 1 >= 0) & (a_N3 + 1 <= 1)))) & (z >= 1)) : a_N3 + 1;
	((_sync = _EXCH)) : 0;
	TRUE : a_N3;
esac;
next (x) := case 
	(((_turn = _MAX0) & (_max0 = 1)) & (((x - 1 >= 0) & (x - 1 <= 1)) & (x >= 1))) : x - 1;
	(((_turn = _MAX0) & (_max0 = 2)) & (((x - 1 >= 0) & (x - 1 <= 1)) & (x >= 1))) : x - 1;
	TRUE : x;
esac;
next (y) := case 
	(((_turn = _MAX0) & (_max0 = 3)) & (((y - 1 >= 0) & (y - 1 <= 1)) & (y >= 1))) : y - 1;
	(((_turn = _MAX0) & (_max0 = 4)) & (((y - 1 >= 0) & (y - 1 <= 1)) & (y >= 1))) : y - 1;
	TRUE : y;
esac;
next (z) := case 
	(((_turn = _MAX0) & (_max0 = 5)) & (((z - 1 >= 0) & (z - 1 <= 1)) & (z >= 1))) : z - 1;
	(((_turn = _MAX0) & (_max0 = 6)) & (((z - 1 >= 0) & (z - 1 <= 1)) & (z >= 1))) : z - 1;
	TRUE : z;
esac;

 ----------------------- SN1 ----------------------- 
MODULE N1_SN1 (_sync )
VAR
_turn : {_CHO0,_READY};
_cho0 : 0 .. 1;
	a : 0 .. 1;
	a_N4 : 0 .. 2;
	a_N7 : 0 .. 2;

INVAR case 
	((_turn = _CHO0) & ((a = 1) & (a >= 1))) : _cho0 != 0;
	TRUE : _cho0 = 0;
esac;

ASSIGN
init (_turn) := _READY;
_cho0 := case 
	(_turn = _CHO0) : case 
		((a = 1) & (a >= 1)) : 1;
		TRUE : 0;
	esac;
	TRUE : 0;
esac;
init (a) := 0;
init (a_N4) := 0;
init (a_N7) := 0;

next (_turn) := case 
	((_turn = _READY)) : case 
		(_sync = _BUSY) : _READY;
		(_sync = _EXCH) : _CHO0;
		TRUE : _turn;
	esac;
	(_turn = _CHO0) : _READY;
	TRUE : _turn;
esac;
next (a_N4) := case 
	(((_turn = _CHO0) & ((_cho0 = 1) & ((a_N4 + 1 >= 0) & (a_N4 + 1 <= 2)))) & ((a = 1) & (a >= 1))) : a_N4 + 1;
	((_sync = _EXCH)) : 0;
	TRUE : a_N4;
esac;
next (a_N7) := case 
	(((_turn = _CHO0) & ((_cho0 = 1) & ((a_N7 + 1 >= 0) & (a_N7 + 1 <= 2)))) & ((a = 1) & (a >= 1))) : a_N7 + 1;
	((_sync = _EXCH)) : 0;
	TRUE : a_N7;
esac;

 ----------------------- SN2 ----------------------- 
MODULE N2_SN2 (_sync )
VAR
_turn : {_CHO0,_READY};
_cho0 : 0 .. 1;
	a : 0 .. 1;
	a_N4 : 0 .. 2;

INVAR case 
	((_turn = _CHO0) & ((a = 1) & (a >= 1))) : _cho0 != 0;
	TRUE : _cho0 = 0;
esac;

ASSIGN
init (_turn) := _READY;
_cho0 := case 
	(_turn = _CHO0) : case 
		((a = 1) & (a >= 1)) : 1;
		TRUE : 0;
	esac;
	TRUE : 0;
esac;
init (a) := 0;
init (a_N4) := 0;

next (_turn) := case 
	((_turn = _READY)) : case 
		(_sync = _BUSY) : _READY;
		(_sync = _EXCH) : _CHO0;
		TRUE : _turn;
	esac;
	(_turn = _CHO0) : _READY;
	TRUE : _turn;
esac;
next (a_N4) := case 
	(((_turn = _CHO0) & ((_cho0 = 1) & ((a_N4 + 1 >= 0) & (a_N4 + 1 <= 2)))) & ((a = 1) & (a >= 1))) : a_N4 + 1;
	((_sync = _EXCH)) : 0;
	TRUE : a_N4;
esac;

 ----------------------- SN3 ----------------------- 
MODULE N3_SN3 (_sync )
VAR
_turn : {_CHO0,_READY};
_cho0 : 0 .. 1;
	a : 0 .. 1;
	a_N6 : 0 .. 1;
	a_N7 : 0 .. 2;

INVAR case 
	((_turn = _CHO0) & ((a = 1) & (a >= 1))) : _cho0 != 0;
	TRUE : _cho0 = 0;
esac;

ASSIGN
init (_turn) := _READY;
_cho0 := case 
	(_turn = _CHO0) : case 
		((a = 1) & (a >= 1)) : 1;
		TRUE : 0;
	esac;
	TRUE : 0;
esac;
init (a) := 0;
init (a_N6) := 0;
init (a_N7) := 0;

next (_turn) := case 
	((_turn = _READY)) : case 
		(_sync = _BUSY) : _READY;
		(_sync = _EXCH) : _CHO0;
		TRUE : _turn;
	esac;
	(_turn = _CHO0) : _READY;
	TRUE : _turn;
esac;
next (a_N6) := case 
	(((_turn = _CHO0) & ((_cho0 = 1) & ((a_N6 + 1 >= 0) & (a_N6 + 1 <= 1)))) & ((a = 1) & (a >= 1))) : a_N6 + 1;
	((_sync = _EXCH)) : 0;
	TRUE : a_N6;
esac;
next (a_N7) := case 
	(((_turn = _CHO0) & ((_cho0 = 1) & ((a_N7 + 1 >= 0) & (a_N7 + 1 <= 2)))) & ((a = 1) & (a >= 1))) : a_N7 + 1;
	((_sync = _EXCH)) : 0;
	TRUE : a_N7;
esac;

 ----------------------- SN4 ----------------------- 
MODULE N4_SN4 (_sync )
VAR
_turn : {_CHO0,_READY};
_cho0 : 0 .. 2;
	a : 0 .. 2;
	a_N5 : 0 .. 2;

INVAR case 
	((_turn = _CHO0) & (((a = 1) & (a >= 1)) |
		 ((a = 2) & (a >= 2)))) : _cho0 != 0;
	TRUE : _cho0 = 0;
esac;

ASSIGN
init (_turn) := _READY;
_cho0 := case 
	(_turn = _CHO0) : case 
		((a = 1) & (a >= 1)) : 1;
		TRUE : 0;
	esac union case 
		((a = 2) & (a >= 2)) : 2;
		TRUE : 0;
	esac;
	TRUE : 0;
esac;
init (a) := 0;
init (a_N5) := 0;

next (_turn) := case 
	((_turn = _READY)) : case 
		(_sync = _BUSY) : _READY;
		(_sync = _EXCH) : _CHO0;
		TRUE : _turn;
	esac;
	(_turn = _CHO0) : _READY;
	TRUE : _turn;
esac;
next (a_N5) := case 
	(((_turn = _CHO0) & ((_cho0 = 1) & ((a_N5 + 1 >= 0) & (a_N5 + 1 <= 2)))) & ((a = 1) & (a >= 1))) : a_N5 + 1;
	(((_turn = _CHO0) & ((_cho0 = 2) & ((a_N5 + 1 >= 0) & (a_N5 + 1 <= 2)))) & ((a = 2) & (a >= 2))) : a_N5 + 1;
	((_sync = _EXCH)) : 0;
	TRUE : a_N5;
esac;

 ----------------------- SN7 ----------------------- 
MODULE N7_SN7 (_sync )
VAR
_turn : {_CHO0,_READY};
_cho0 : 0 .. 2;
	a : 0 .. 2;
	a_N8 : 0 .. 1;

INVAR case 
	((_turn = _CHO0) & (((a = 1) & (a >= 1)) |
		 ((a = 2) & (a >= 2)))) : _cho0 != 0;
	TRUE : _cho0 = 0;
esac;

ASSIGN
init (_turn) := _READY;
_cho0 := case 
	(_turn = _CHO0) : case 
		((a = 1) & (a >= 1)) : 1;
		TRUE : 0;
	esac union case 
		((a = 2) & (a >= 2)) : 2;
		TRUE : 0;
	esac;
	TRUE : 0;
esac;
init (a) := 0;
init (a_N8) := 0;

next (_turn) := case 
	((_turn = _READY)) : case 
		(_sync = _BUSY) : _READY;
		(_sync = _EXCH) : _CHO0;
		TRUE : _turn;
	esac;
	(_turn = _CHO0) : _READY;
	TRUE : _turn;
esac;
next (a_N8) := case 
	(((_turn = _CHO0) & ((_cho0 = 1) & ((a_N8 + 1 >= 0) & (a_N8 + 1 <= 1)))) & ((a = 1) & (a >= 1))) : a_N8 + 1;
	(((_turn = _CHO0) & ((_cho0 = 2) & ((a_N8 + 1 >= 0) & (a_N8 + 1 <= 1)))) & ((a = 2) & (a >= 2))) : a_N8 + 1;
	((_sync = _EXCH)) : 0;
	TRUE : a_N8;
esac;

 ----------------------- SN6 ----------------------- 
MODULE N6_SN6 (_sync )
VAR
_turn : {_CHO0,_READY};
_cho0 : 0 .. 1;
	a : 0 .. 1;
	a_N5 : 0 .. 2;

INVAR case 
	((_turn = _CHO0) & ((a = 1) & (a >= 1))) : _cho0 != 0;
	TRUE : _cho0 = 0;
esac;

ASSIGN
init (_turn) := _READY;
_cho0 := case 
	(_turn = _CHO0) : case 
		((a = 1) & (a >= 1)) : 1;
		TRUE : 0;
	esac;
	TRUE : 0;
esac;
init (a) := 0;
init (a_N5) := 0;

next (_turn) := case 
	((_turn = _READY)) : case 
		(_sync = _BUSY) : _READY;
		(_sync = _EXCH) : _CHO0;
		TRUE : _turn;
	esac;
	(_turn = _CHO0) : _READY;
	TRUE : _turn;
esac;
next (a_N5) := case 
	(((_turn = _CHO0) & ((_cho0 = 1) & ((a_N5 + 1 >= 0) & (a_N5 + 1 <= 2)))) & ((a = 1) & (a >= 1))) : a_N5 + 1;
	((_sync = _EXCH)) : 0;
	TRUE : a_N5;
esac;

 ----------------------- SN5 ----------------------- 
MODULE N5_SN5 (_sync )
VAR
_turn : {_CHO0,_READY};
_cho0 : 0 .. 2;
	a : 0 .. 2;
	a_N9 : 0 .. 2;

INVAR case 
	((_turn = _CHO0) & (((a = 2) & (a >= 2)) |
		 ((a = 1) & (a >= 1)))) : _cho0 != 0;
	TRUE : _cho0 = 0;
esac;

ASSIGN
init (_turn) := _READY;
_cho0 := case 
	(_turn = _CHO0) : case 
		((a = 2) & (a >= 2)) : 1;
		TRUE : 0;
	esac union case 
		((a = 1) & (a >= 1)) : 2;
		TRUE : 0;
	esac;
	TRUE : 0;
esac;
init (a) := 0;
init (a_N9) := 0;

next (_turn) := case 
	((_turn = _READY)) : case 
		(_sync = _BUSY) : _READY;
		(_sync = _EXCH) : _CHO0;
		TRUE : _turn;
	esac;
	(_turn = _CHO0) : _READY;
	TRUE : _turn;
esac;
next (a_N9) := case 
	(((_turn = _CHO0) & ((_cho0 = 1) & ((a_N9 + 1 >= 0) & (a_N9 + 1 <= 2)))) & ((a = 2) & (a >= 2))) : a_N9 + 1;
	((_sync = _EXCH)) : 0;
	TRUE : a_N9;
esac;

 ----------------------- SN9 ----------------------- 
MODULE N9_SN9 (_sync )
VAR
_turn : {_CHO0,_READY};
_cho0 : 0 .. 2;
	a : 0 .. 2;
	a_N10 : 0 .. 1;

INVAR case 
	((_turn = _CHO0) & (((a = 2) & (a >= 2)) |
		 ((a = 1) & (a >= 1)))) : _cho0 != 0;
	TRUE : _cho0 = 0;
esac;

ASSIGN
init (_turn) := _READY;
_cho0 := case 
	(_turn = _CHO0) : case 
		((a = 2) & (a >= 2)) : 1;
		TRUE : 0;
	esac union case 
		((a = 1) & (a >= 1)) : 2;
		TRUE : 0;
	esac;
	TRUE : 0;
esac;
init (a) := 0;
init (a_N10) := 0;

next (_turn) := case 
	((_turn = _READY)) : case 
		(_sync = _BUSY) : _READY;
		(_sync = _EXCH) : _CHO0;
		TRUE : _turn;
	esac;
	(_turn = _CHO0) : _READY;
	TRUE : _turn;
esac;
next (a_N10) := case 
	(((_turn = _CHO0) & ((_cho0 = 1) & ((a_N10 + 1 >= 0) & (a_N10 + 1 <= 1)))) & ((a = 2) & (a >= 2))) : a_N10 + 1;
	((_sync = _EXCH)) : 0;
	TRUE : a_N10;
esac;

 ----------------------- SN8 ----------------------- 
MODULE N8_SN8 (_sync )
VAR
_turn : {_CHO0,_READY};
_cho0 : 0 .. 1;
	a : 0 .. 1;
	a_N9 : 0 .. 2;

INVAR case 
	((_turn = _CHO0) & ((a = 1) & (a >= 1))) : _cho0 != 0;
	TRUE : _cho0 = 0;
esac;

ASSIGN
init (_turn) := _READY;
_cho0 := case 
	(_turn = _CHO0) : case 
		((a = 1) & (a >= 1)) : 1;
		TRUE : 0;
	esac;
	TRUE : 0;
esac;
init (a) := 0;
init (a_N9) := 0;

next (_turn) := case 
	((_turn = _READY)) : case 
		(_sync = _BUSY) : _READY;
		(_sync = _EXCH) : _CHO0;
		TRUE : _turn;
	esac;
	(_turn = _CHO0) : _READY;
	TRUE : _turn;
esac;
next (a_N9) := case 
	(((_turn = _CHO0) & ((_cho0 = 1) & ((a_N9 + 1 >= 0) & (a_N9 + 1 <= 2)))) & ((a = 1) & (a >= 1))) : a_N9 + 1;
	((_sync = _EXCH)) : 0;
	TRUE : a_N9;
esac;

 ----------------------- SN10 ----------------------- 
MODULE N10_SN10 (_sync )
VAR
_turn : {_SEQ0,_READY};
_count : 0 .. 3;
_seq0 : 0 .. 1;
	a : 0 .. 1;


ASSIGN
init (_turn) := _READY;
init (_count) := 0;
_seq0 := case 
	(_turn = _SEQ0) : case 
		TRUE : 0;
	esac;
	TRUE : 0;
esac;
init (a) := 0;

next (_turn) := case 
	((_turn = _READY)) : case 
		(_sync = _BUSY) : _READY;
		(_sync = _EXCH) : _SEQ0;
		TRUE : _turn;
	esac;
	(_turn = _SEQ0) : case 
		(_seq0 != 0) : _SEQ0;
		TRUE : _READY;
	esac;
	TRUE : _turn;
esac;
next (_count) := case 
	((_turn = _SEQ0) & (_count < 0)) : case 
		(_seq0 != 0) : _count + 1;
		TRUE : 0;
	esac;
	((next(_turn) = _SEQ0)) : 1;
	TRUE : 0;
esac;

 ----------------------- MAIN ----------------------- 
MODULE main
VAR
_sync : {_BUSY,_EXCH};
pInS : boolean;
	input : input_Input(1,1,_sync);
	N1 : N1_SN1(_sync);
	N2 : N2_SN2(_sync);
	N3 : N3_SN3(_sync);
	N4 : N4_SN4(_sync);
	N7 : N7_SN7(_sync);
	N6 : N6_SN6(_sync);
	N5 : N5_SN5(_sync);
	N9 : N9_SN9(_sync);
	N8 : N8_SN8(_sync);
	N10 : N10_SN10(_sync);
ASSIGN
init (_sync) := _EXCH;
init (pInS) := TRUE;
next (_sync) := case 
	((((((((((((next(input._turn) = _READY)) 
	& (next(N1._turn) = _READY)) 
	& (next(N2._turn) = _READY)) 
	& (next(N3._turn) = _READY)) 
	& (next(N4._turn) = _READY)) 
	& (next(N7._turn) = _READY)) 
	& (next(N6._turn) = _READY)) 
	& (next(N5._turn) = _READY)) 
	& (next(N9._turn) = _READY)) 
	& (next(N8._turn) = _READY)) 
	& (next(N10._turn) = _READY)) : _EXCH;
	TRUE : _BUSY;
esac;
next (pInS) := case 
	(_sync = _EXCH) : TRUE;
	TRUE : FALSE;
esac;

next (N1.a) := case
(((_sync = _EXCH)) & ((N1.a + input.a_N1 >= 0) & (N1.a + input.a_N1 <= 1))) : N1.a + input.a_N1;
(((N1._turn = _CHO0) & (N1._cho0 = 1)) & (((N1.a - 1 >= 0) & (N1.a - 1 <= 1)) & ((N1.a = 1) & (N1.a >= 1)))) : N1.a - 1;
TRUE : N1.a;
esac;
next (N2.a) := case
(((_sync = _EXCH)) & ((N2.a + input.a_N2 >= 0) & (N2.a + input.a_N2 <= 1))) : N2.a + input.a_N2;
(((N2._turn = _CHO0) & (N2._cho0 = 1)) & (((N2.a - 1 >= 0) & (N2.a - 1 <= 1)) & ((N2.a = 1) & (N2.a >= 1)))) : N2.a - 1;
TRUE : N2.a;
esac;
next (N3.a) := case
(((_sync = _EXCH)) & ((N3.a + input.a_N3 >= 0) & (N3.a + input.a_N3 <= 1))) : N3.a + input.a_N3;
(((N3._turn = _CHO0) & (N3._cho0 = 1)) & (((N3.a - 1 >= 0) & (N3.a - 1 <= 1)) & ((N3.a = 1) & (N3.a >= 1)))) : N3.a - 1;
TRUE : N3.a;
esac;
next (N4.a) := case
(((_sync = _EXCH)) & ((N4.a + N1.a_N4 + N2.a_N4 >= 0) & (N4.a + N1.a_N4 + N2.a_N4 <= 2))) : N4.a + N1.a_N4 + N2.a_N4;
(((N4._turn = _CHO0) & (N4._cho0 = 1)) & (((N4.a - 1 >= 0) & (N4.a - 1 <= 2)) & ((N4.a = 1) & (N4.a >= 1)))) : N4.a - 1;
(((N4._turn = _CHO0) & (N4._cho0 = 2)) & (((N4.a - 2 >= 0) & (N4.a - 2 <= 2)) & ((N4.a = 2) & (N4.a >= 2)))) : N4.a - 2;
TRUE : N4.a;
esac;
next (N7.a) := case
(((_sync = _EXCH)) & ((N7.a + N1.a_N7 + N3.a_N7 >= 0) & (N7.a + N1.a_N7 + N3.a_N7 <= 2))) : N7.a + N1.a_N7 + N3.a_N7;
(((N7._turn = _CHO0) & (N7._cho0 = 1)) & (((N7.a - 1 >= 0) & (N7.a - 1 <= 2)) & ((N7.a = 1) & (N7.a >= 1)))) : N7.a - 1;
(((N7._turn = _CHO0) & (N7._cho0 = 2)) & (((N7.a - 2 >= 0) & (N7.a - 2 <= 2)) & ((N7.a = 2) & (N7.a >= 2)))) : N7.a - 2;
TRUE : N7.a;
esac;
next (N6.a) := case
(((_sync = _EXCH)) & ((N6.a + N3.a_N6 >= 0) & (N6.a + N3.a_N6 <= 1))) : N6.a + N3.a_N6;
(((N6._turn = _CHO0) & (N6._cho0 = 1)) & (((N6.a - 1 >= 0) & (N6.a - 1 <= 1)) & ((N6.a = 1) & (N6.a >= 1)))) : N6.a - 1;
TRUE : N6.a;
esac;
next (N5.a) := case
(((_sync = _EXCH)) & ((N5.a + N6.a_N5 + N4.a_N5 >= 0) & (N5.a + N6.a_N5 + N4.a_N5 <= 2))) : N5.a + N6.a_N5 + N4.a_N5;
(((N5._turn = _CHO0) & (N5._cho0 = 1)) & (((N5.a - 2 >= 0) & (N5.a - 2 <= 2)) & ((N5.a = 2) & (N5.a >= 2)))) : N5.a - 2;
(((N5._turn = _CHO0) & (N5._cho0 = 2)) & (((N5.a - 1 >= 0) & (N5.a - 1 <= 2)) & ((N5.a = 1) & (N5.a >= 1)))) : N5.a - 1;
TRUE : N5.a;
esac;
next (N9.a) := case
(((_sync = _EXCH)) & ((N9.a + N5.a_N9 + N8.a_N9 >= 0) & (N9.a + N5.a_N9 + N8.a_N9 <= 2))) : N9.a + N5.a_N9 + N8.a_N9;
(((N9._turn = _CHO0) & (N9._cho0 = 1)) & (((N9.a - 2 >= 0) & (N9.a - 2 <= 2)) & ((N9.a = 2) & (N9.a >= 2)))) : N9.a - 2;
(((N9._turn = _CHO0) & (N9._cho0 = 2)) & (((N9.a - 1 >= 0) & (N9.a - 1 <= 2)) & ((N9.a = 1) & (N9.a >= 1)))) : N9.a - 1;
TRUE : N9.a;
esac;
next (N8.a) := case
(((_sync = _EXCH)) & ((N8.a + N7.a_N8 >= 0) & (N8.a + N7.a_N8 <= 1))) : N8.a + N7.a_N8;
(((N8._turn = _CHO0) & (N8._cho0 = 1)) & (((N8.a - 1 >= 0) & (N8.a - 1 <= 1)) & ((N8.a = 1) & (N8.a >= 1)))) : N8.a - 1;
TRUE : N8.a;
esac;
next (N10.a) := case
(((_sync = _EXCH)) & ((N10.a + N9.a_N10 >= 0) & (N10.a + N9.a_N10 <= 1))) : N10.a + N9.a_N10;
TRUE : N10.a;
esac;

-- LTL Properties
LTLSPEC G ((N1.a = 0 & (N2.a = 0 & N3.a = 0)) -> F N10.a = 0)
LTLSPEC G ((N1.a = 0 & (N2.a = 0 & N3.a = 1)) -> F N10.a = 0)
LTLSPEC G ((N1.a = 0 & (N2.a = 1 & N3.a = 0)) -> F N10.a = 0)
LTLSPEC G ((N1.a = 0 & (N2.a = 1 & N3.a = 1)) -> F N10.a = 1)
LTLSPEC G ((N1.a = 1 & (N2.a = 0 & N3.a = 0)) -> F N10.a = 0)
LTLSPEC G ((N1.a = 1 & (N2.a = 0 & N3.a = 1)) -> F N10.a = 1)
LTLSPEC G ((N1.a = 1 & (N2.a = 1 & N3.a = 0)) -> F N10.a = 0)
LTLSPEC G ((N1.a = 1 & (N2.a = 1 & N3.a = 1)) -> F N10.a = 1)
LTLSPEC G ((N1.a = 1 | (N2.a = 1 | N3.a = 1)) -> F (N5.a > 0 | N9.a > 0))
LTLSPEC G ((N1.a = 1 | N3.a = 1) -> F N8.a = 1)

-- CTL Properties
SPEC AG ((N1.a = 0 & (N2.a = 0 & N3.a = 0)) -> EF N10.a = 0)
SPEC AG ((N1.a = 0 & (N2.a = 0 & N3.a = 1)) -> EF N10.a = 0)
SPEC AG ((N1.a = 0 & (N2.a = 1 & N3.a = 0)) -> EF N10.a = 0)
SPEC AG ((N1.a = 0 & (N2.a = 1 & N3.a = 1)) -> EF N10.a = 1)
SPEC AG ((N1.a = 1 & (N2.a = 0 & N3.a = 0)) -> EF N10.a = 0)
SPEC AG ((N1.a = 1 & (N2.a = 0 & N3.a = 1)) -> EF N10.a = 1)
SPEC AG ((N1.a = 1 & (N2.a = 1 & N3.a = 0)) -> EF N10.a = 0)
SPEC AG ((N1.a = 1 & (N2.a = 1 & N3.a = 1)) -> EF N10.a = 1)
SPEC AG ((N1.a = 1 | (N2.a = 1 | N3.a = 1)) -> EF (N5.a > 0 | N9.a > 0))
SPEC AG ((N1.a = 1 | N3.a = 1) -> EF N8.a = 1)

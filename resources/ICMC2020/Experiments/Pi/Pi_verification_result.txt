*** This is NuSMV 2.6.0 (compiled on Wed Oct 14 15:37:51 2015)
*** Enabled addons are: compass
*** For more information on NuSMV see <http://nusmv.fbk.eu>
*** or email to <nusmv-users@list.fbk.eu>.
*** Please report bugs to <Please report bugs to <nusmv-users@fbk.eu>>

*** Copyright (c) 2010-2014, Fondazione Bruno Kessler

*** This version of NuSMV is linked to the CUDD library version 2.4.1
*** Copyright (c) 1995-2004, Regents of the University of Colorado

*** This version of NuSMV is linked to the MiniSat SAT solver. 
*** See http://minisat.se/MiniSat.html
*** Copyright (c) 2003-2006, Niklas Een, Niklas Sorensson
*** Copyright (c) 2007-2010, Niklas Sorensson

-- specification  G ((NC1.a <= 2 & (NC2.a <= 1 & NC3.a <= 2)) | !pInS)  is true
-- specification !( F (NC3.a > 2 & pInS))  is true
-- specification  F ((NC1.a = 1 & (NC2.a = 0 & NC3.a = 0)) & pInS)  is false
-- as demonstrated by the following execution sequence
Trace Description: LTL Counterexample 
Trace Type: Counterexample 
  -> State: 1.1 <-
    _sync = _EXCH
    pInS = TRUE
    NC1._turn = _READY
    NC1._cho0 = 0
    NC1.a = 2
    NC1.a_NC2 = 0
    NC1.a_NC3 = 0
    NC2._turn = _READY
    NC2._cho0 = 0
    NC2.a = 1
    NC2.a_NC1 = 0
    NC2.a_NC3 = 0
    NC3._turn = _READY
    NC3._cho0 = 0
    NC3.a = 1
    NC3.a_NEnv = 0
    NEnv._turn = _READY
    NEnv._count = 0
    NEnv._seq0 = 0
    NEnv.a = 0
  -> State: 1.2 <-
    _sync = _BUSY
    NC1._turn = _CHO0
    NC1._cho0 = 1
    NC2._turn = _CHO0
    NC2._cho0 = 1
    NC3._turn = _CHO0
    NC3._cho0 = 1
    NEnv._turn = _SEQ0
    NEnv._count = 1
  -> State: 1.3 <-
    _sync = _EXCH
    pInS = FALSE
    NC1._turn = _READY
    NC1._cho0 = 0
    NC1.a = 1
    NC1.a_NC2 = 1
    NC1.a_NC3 = 1
    NC2._turn = _READY
    NC2._cho0 = 0
    NC2.a = 0
    NC2.a_NC1 = 1
    NC2.a_NC3 = 1
    NC3._turn = _READY
    NC3._cho0 = 0
    NC3.a = 0
    NC3.a_NEnv = 1
    NEnv._turn = _READY
    NEnv._count = 0
  -- Loop starts here
  -> State: 1.4 <-
    _sync = _BUSY
    pInS = TRUE
    NC1._turn = _CHO0
    NC1._cho0 = 1
    NC1.a = 2
    NC1.a_NC2 = 0
    NC1.a_NC3 = 0
    NC2._turn = _CHO0
    NC2._cho0 = 1
    NC2.a = 1
    NC2.a_NC1 = 0
    NC2.a_NC3 = 0
    NC3._turn = _CHO0
    NC3._cho0 = 2
    NC3.a = 2
    NC3.a_NEnv = 0
    NEnv._turn = _SEQ0
    NEnv._count = 1
    NEnv.a = 1
  -> State: 1.5 <-
    _sync = _EXCH
    pInS = FALSE
    NC1._turn = _READY
    NC1._cho0 = 0
    NC1.a = 1
    NC1.a_NC2 = 1
    NC1.a_NC3 = 1
    NC2._turn = _READY
    NC2._cho0 = 0
    NC2.a = 0
    NC2.a_NC1 = 1
    NC2.a_NC3 = 1
    NC3._turn = _READY
    NC3._cho0 = 0
    NC3.a = 0
    NEnv._turn = _READY
    NEnv._count = 0
  -> State: 1.6 <-
    _sync = _BUSY
    pInS = TRUE
    NC1._turn = _CHO0
    NC1._cho0 = 1
    NC1.a = 2
    NC1.a_NC2 = 0
    NC1.a_NC3 = 0
    NC2._turn = _CHO0
    NC2._cho0 = 1
    NC2.a = 1
    NC2.a_NC1 = 0
    NC2.a_NC3 = 0
    NC3._turn = _CHO0
    NC3._cho0 = 2
    NC3.a = 2
    NEnv._turn = _SEQ0
    NEnv._count = 1
-- specification  G (((NC1.a = 1 & (NC2.a = 1 & NC3.a = 1)) ->  X (!pInS U ((NC1.a = 2 & (NC2.a = 0 & NC3.a = 1)) & pInS))) | !pInS)  is true
-- specification  G (((NC1.a = 2 & (NC2.a = 0 & NC3.a = 1)) ->  X (!pInS U ((NC1.a = 1 & (NC2.a = 1 & NC3.a = 1)) & pInS))) | !pInS)  is false
-- as demonstrated by the following execution sequence
Trace Description: LTL Counterexample 
Trace Type: Counterexample 
  -> State: 2.1 <-
    _sync = _EXCH
    pInS = TRUE
    NC1._turn = _READY
    NC1._cho0 = 0
    NC1.a = 2
    NC1.a_NC2 = 0
    NC1.a_NC3 = 0
    NC2._turn = _READY
    NC2._cho0 = 0
    NC2.a = 1
    NC2.a_NC1 = 0
    NC2.a_NC3 = 0
    NC3._turn = _READY
    NC3._cho0 = 0
    NC3.a = 1
    NC3.a_NEnv = 0
    NEnv._turn = _READY
    NEnv._count = 0
    NEnv._seq0 = 0
    NEnv.a = 0
  -> State: 2.2 <-
    _sync = _BUSY
    NC1._turn = _CHO0
    NC1._cho0 = 2
    NC2._turn = _CHO0
    NC2._cho0 = 1
    NC3._turn = _CHO0
    NC3._cho0 = 1
    NEnv._turn = _SEQ0
    NEnv._count = 1
  -> State: 2.3 <-
    _sync = _EXCH
    pInS = FALSE
    NC1._turn = _READY
    NC1._cho0 = 0
    NC1.a = 0
    NC1.a_NC2 = 1
    NC1.a_NC3 = 1
    NC2._turn = _READY
    NC2._cho0 = 0
    NC2.a = 0
    NC2.a_NC1 = 1
    NC2.a_NC3 = 1
    NC3._turn = _READY
    NC3._cho0 = 0
    NC3.a = 0
    NC3.a_NEnv = 1
    NEnv._turn = _READY
    NEnv._count = 0
  -> State: 2.4 <-
    _sync = _BUSY
    pInS = TRUE
    NC1._turn = _CHO0
    NC1.a = 1
    NC1.a_NC2 = 0
    NC1.a_NC3 = 0
    NC2._turn = _CHO0
    NC2._cho0 = 1
    NC2.a = 1
    NC2.a_NC1 = 0
    NC2.a_NC3 = 0
    NC3._turn = _CHO0
    NC3._cho0 = 2
    NC3.a = 2
    NC3.a_NEnv = 0
    NEnv._turn = _SEQ0
    NEnv._count = 1
    NEnv.a = 1
  -> State: 2.5 <-
    _sync = _EXCH
    pInS = FALSE
    NC1._turn = _READY
    NC2._turn = _READY
    NC2._cho0 = 0
    NC2.a = 0
    NC2.a_NC1 = 1
    NC2.a_NC3 = 1
    NC3._turn = _READY
    NC3._cho0 = 0
    NC3.a = 0
    NEnv._turn = _READY
    NEnv._count = 0
  -> State: 2.6 <-
    _sync = _BUSY
    pInS = TRUE
    NC1._turn = _CHO0
    NC1._cho0 = 2
    NC1.a = 2
    NC2._turn = _CHO0
    NC2.a_NC1 = 0
    NC2.a_NC3 = 0
    NC3._turn = _CHO0
    NC3._cho0 = 1
    NC3.a = 1
    NEnv._turn = _SEQ0
    NEnv._count = 1
  -> State: 2.7 <-
    _sync = _EXCH
    pInS = FALSE
    NC1._turn = _READY
    NC1._cho0 = 0
    NC1.a = 0
    NC1.a_NC2 = 1
    NC1.a_NC3 = 1
    NC2._turn = _READY
    NC3._turn = _READY
    NC3._cho0 = 0
    NC3.a = 0
    NC3.a_NEnv = 1
    NEnv._turn = _READY
    NEnv._count = 0
  -> State: 2.8 <-
    _sync = _BUSY
    pInS = TRUE
    NC1._turn = _CHO0
    NC1.a_NC2 = 0
    NC1.a_NC3 = 0
    NC2._turn = _CHO0
    NC2._cho0 = 1
    NC2.a = 1
    NC3._turn = _CHO0
    NC3._cho0 = 1
    NC3.a = 1
    NC3.a_NEnv = 0
    NEnv._turn = _SEQ0
    NEnv._count = 1
    NEnv.a = 2
  -> State: 2.9 <-
    _sync = _EXCH
    pInS = FALSE
    NC1._turn = _READY
    NC2._turn = _READY
    NC2._cho0 = 0
    NC2.a = 0
    NC2.a_NC1 = 1
    NC2.a_NC3 = 1
    NC3._turn = _READY
    NC3._cho0 = 0
    NC3.a = 0
    NC3.a_NEnv = 1
    NEnv._turn = _READY
    NEnv._count = 0
  -> State: 2.10 <-
    _sync = _BUSY
    pInS = TRUE
    NC1._turn = _CHO0
    NC1.a = 1
    NC2._turn = _CHO0
    NC2.a_NC1 = 0
    NC2.a_NC3 = 0
    NC3._turn = _CHO0
    NC3._cho0 = 1
    NC3.a = 1
    NC3.a_NEnv = 0
    NEnv._turn = _SEQ0
    NEnv._count = 1
  -> State: 2.11 <-
    _sync = _EXCH
    pInS = FALSE
    NC1._turn = _READY
    NC2._turn = _READY
    NC3._turn = _READY
    NC3._cho0 = 0
    NC3.a = 0
    NC3.a_NEnv = 1
    NEnv._turn = _READY
    NEnv._count = 0
  -- Loop starts here
  -> State: 2.12 <-
    _sync = _BUSY
    pInS = TRUE
    NC1._turn = _CHO0
    NC2._turn = _CHO0
    NC3._turn = _CHO0
    NC3.a_NEnv = 0
    NEnv._turn = _SEQ0
    NEnv._count = 1
  -> State: 2.13 <-
    _sync = _EXCH
    pInS = FALSE
    NC1._turn = _READY
    NC2._turn = _READY
    NC3._turn = _READY
    NEnv._turn = _READY
    NEnv._count = 0
  -> State: 2.14 <-
    _sync = _BUSY
    pInS = TRUE
    NC1._turn = _CHO0
    NC2._turn = _CHO0
    NC3._turn = _CHO0
    NEnv._turn = _SEQ0
    NEnv._count = 1
-- specification  G ((NC1.a = 0 ->  F ((NC1.a = 1 & (NC2.a = 0 & NC3.a = 0)) & pInS)) | !pInS)  is true
-- specification  F (NEnv.a > 0 & pInS)  is true
